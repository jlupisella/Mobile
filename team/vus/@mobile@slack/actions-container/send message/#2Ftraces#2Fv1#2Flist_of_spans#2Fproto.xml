<http-page executeResourcesDynamically="false"
    name="/traces/v1/list_of_spans/proto"
    playRequestsSequentially="false"
    recordedArtifactZipFileName="team/vus/@mobile@slack/%resources%/recorded-artifacts/d8b50167-d3c9-4a52-8634-c0175dd66451.zip"
    slaProfileEnabled="false" thinkTime="5360"
    thinkTimeMode="MODE_SIMPLE_THINK_TIME" thinkTimeRangeEnd=""
    thinkTimeRangeStart="" uid="d8b50167-d3c9-4a52-8634-c0175dd66451">
    <embedded-action>8d5b375b-efa0-48df-ab15-aff81cdbc31d</embedded-action>
    <embedded-action>51c430a2-6f35-40ee-8285-a4686399a154</embedded-action>
</http-page>
<http-action actionType="1" contentType="text/plain; charset=utf-8"
    extractorInjectPathPolicy="2" extractorPathPolicy="1"
    followRedirects="false" generatedByClient="false"
    linkExtractorSeveralMatchOccurrence="1"
    linkExtractorSeveralMatchPolicy="1" linkExtractorType="6"
    method="POST" name="/traces/v1/list_of_spans/proto"
    path="/traces/v1/list_of_spans/proto" postCharset="iso-8859-1"
    postType="2"
    recordedArtifactZipFileName="team/vus/@mobile@slack/%resources%/recorded-artifacts/d8b50167-d3c9-4a52-8634-c0175dd66451.zip"
    recordedResponseCode="200" responseSize="2" serverUid="slackb.com"
    slaProfileEnabled="false" uid="8d5b375b-efa0-48df-ab15-aff81cdbc31d" useKeepAlive="false">
    <binaryPostContentBase64><![CDATA[]]></binaryPostContentBase64>
    <responsePageFileDescription>recorded-responses/res_8d5b375b-efa0-48df-ab15-aff81cdbc31d</responsePageFileDescription>
    <requestContentFileDescription>recorded-requests/req_8d5b375b-efa0-48df-ab15-aff81cdbc31d.txt</requestContentFileDescription>
    <header name="Accept" value="*/*"/>
    <header name="Accept-Encoding" value="gzip, deflate, br"/>
    <header name="Accept-Language" value="en-US,en;q=0.9"/>
    <header name="Connection" value="keep-alive"/>
    <header name="Content-Type" value="application/x-www-form-urlencoded"/>
    <header name="Host" value="slackb.com"/>
    <header name="User-Agent" value="com.tinyspeck.chatlyio/22.08.20 (iPhone; iOS 15.6; Scale/3.00)"/>
    <header name="UUID" value="168F7F9A6B5C46399DE57487FC823118"/>
    <header name="X-Slack-Ses-Id" value="13F8276D-0D85-4C88-A67A-1A4D7EB0A492"/>
    <responseHeaders>HTTP/1.1 200 OK&#xd;
access-control-allow-headers: Content-Type, X-Slack-Ses-Id, User-Agent, X-Forwarded-For&#xd;
access-control-allow-methods: POST, GET, OPTIONS, PUT, DELETE&#xd;
access-control-allow-origin: *&#xd;
strict-transport-security: max-age=63072000; includeSubDomains; preload&#xd;
date: Mon, 07 Nov 2022 17:49:34 GMT&#xd;
content-length: 2&#xd;
content-type: text/plain; charset=utf-8&#xd;
x-envoy-upstream-service-time: 3&#xd;
via: envoy-slackb-iad-m7dc&#xd;
server: envoy</responseHeaders>
    <record-html-infos extractorRegExp="false" htmlType="0"/>
</http-action>
<http-action actionType="1" contentType="text/plain; charset=utf-8"
    extractorInjectPathPolicy="2" extractorPathPolicy="1"
    followRedirects="false" generatedByClient="false"
    linkExtractorSeveralMatchOccurrence="1"
    linkExtractorSeveralMatchPolicy="1" linkExtractorType="6"
    method="POST" name="/events/proto_batch" path="/events/proto_batch"
    postCharset="iso-8859-1" postType="2"
    recordedArtifactZipFileName="team/vus/@mobile@slack/%resources%/recorded-artifacts/d8b50167-d3c9-4a52-8634-c0175dd66451.zip"
    recordedResponseCode="200" responseSize="2" serverUid="slackb.com"
    slaProfileEnabled="false" uid="51c430a2-6f35-40ee-8285-a4686399a154" useKeepAlive="false">
    <binaryPostContentBase64><![CDATA[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]]></binaryPostContentBase64>
    <responsePageFileDescription>recorded-responses/res_51c430a2-6f35-40ee-8285-a4686399a154</responsePageFileDescription>
    <requestContentFileDescription>recorded-requests/req_51c430a2-6f35-40ee-8285-a4686399a154.txt</requestContentFileDescription>
    <header name="Accept" value="*/*"/>
    <header name="Accept-Encoding" value="gzip, deflate, br"/>
    <header name="Accept-Language" value="en-US,en;q=0.9"/>
    <header name="Connection" value="keep-alive"/>
    <header name="Content-Type" value="application/x-www-form-urlencoded"/>
    <header name="Host" value="slackb.com"/>
    <header name="User-Agent" value="com.tinyspeck.chatlyio/22.08.20 (iPhone; iOS 15.6; Scale/3.00)"/>
    <header name="UUID" value="168F7F9A6B5C46399DE57487FC823118"/>
    <responseHeaders>HTTP/1.1 200 OK&#xd;
access-control-allow-headers: Content-Type, X-Slack-Ses-Id, User-Agent, X-Forwarded-For&#xd;
access-control-allow-methods: POST, GET, OPTIONS, PUT, DELETE&#xd;
access-control-allow-origin: *&#xd;
strict-transport-security: max-age=63072000; includeSubDomains; preload&#xd;
date: Mon, 07 Nov 2022 17:49:34 GMT&#xd;
content-length: 2&#xd;
content-type: text/plain; charset=utf-8&#xd;
x-envoy-upstream-service-time: 1&#xd;
via: envoy-slackb-iad-vxu3&#xd;
server: envoy</responseHeaders>
    <record-html-infos extractorRegExp="false" htmlType="0"/>
</http-action>
